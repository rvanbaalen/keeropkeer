function e(e){return document.getElementById(e)}function o(e=6){return Math.random().toString(16).substr(-e)}function l(e,o){Array.prototype.forEach.call(document.querySelectorAll(e),o)}function r(e,o={},l){let r=document.createElement(e);return Object.keys(o).forEach((function(e){r[e]=o[e]})),l&&l.append(r),r}function c(e){let o=r("div");return o.innerHTML=e,o.firstElementChild}document.querySelector("body").classList.add("lang-nl");const a={modal:{newGame:{body:"Weet je zeker dat je een nieuw spel wil beginnen?"}},label:{cancel:"Annuleren",ok:"OK",newGame:"Nieuw spel",bonus:"bonus",columns:"A-O",stars:"Sterren",totals:"Totaal",jokers:"Jokers"},notification:{landscapeMode:"Draai het scherm horizontaal om te beginnen.",selectLevel:"Selecteer een level.",playerName:"Wat is je naam?",creatingLobby:"Bezig met het aanmaken van de lobby..."}},t={GAME_NEW:"new-game",GAME_RESET:"state-reset",GAME_START:"start-game",LEVEL_RESET:"reset-level",LEVEL_SELECT:"level-select",LEVEL_LOADED:"level-loaded",SCORE_RELOAD:"score-reload",SCORE_TOTAL_TOGGLE:"score-total-toggle",MODAL_TOGGLE:"modal-toggle",MODAL_HIDE:"modal-hide",MODAL_SHOW:"modal-show",LOBBY_READY:"lobby-ready",LOBBY_JOIN:"lobby-join",LOBBY_JOIN_FAILED:"lobby-join-failed",LOBBY_JOINED:"lobby-joined",LOBBY_CREATED:"lobby-created",LOBBY_DELETED:"lobby-deleted",PLAYER_REGISTERED:"player-registered",PLAYER_REGISTRATION_FAILED:"player-registration-failed",PLAYER_DELETED:"player-deleted",GRID_BLOCK_SELECTED:"grid-block-selected",GRID_COLUMN_COMPLETE:"grid-column-complete",ENGINE_GRID_RENDER_COMPLETE:"grid-render-complete",JOKER_SELECTED:"joker-selected",STAR_SELECTED:"star-selected",RENDER_JOKER_SCORE:"render-joker-score",RENDER_BONUS_SCORE:"render-bonus-score",RENDER_COLUMN_SCORE:"render-column-score",RENDER_STAR_SCORE:"render-star-score",RENDER_TOTAL_SCORE:"render-total-score",RENDER_LEVEL:"render-level",RENDER_SCORES:"render-scores"};function n(o,l){console.log("Fired event: "+o,l);let r=new CustomEvent(o,{detail:l});e("app").dispatchEvent(r)}function s(o,l){e("app").addEventListener(o,l,!1)}function i(l){let r={...{id:"modal-"+o(),message:"No modal message is set.",buttons:!1,appendTo:"#app",visible:!1},...l};!0===r.buttons&&(r.buttons={cancel:{id:r.id+"-cancel",label:a.label.cancel},ok:{id:r.id+"-ok",label:a.label.ok}});let t=c(`\n        <div class="modal-overlay${r.visible?" show":""}" id="${r.id}">\n            <div class="modal-container">\n                ${r.title?`\n                <div class="modal-title">\n                    <h2>${r.title}</h2>\n                </div>\n                `:""}\n                ${r.body&&!r.message?r.body:`\n                <div class="modal-body">\n                    <p>${r.message}</p>\n                </div>\n                `}\n                ${r.buttons?`\n                <div class="modal-button-bar">\n                    ${r.buttons.cancel?`<a href="#" id="${r.buttons.cancel.id}" class="button button-cancel">${r.buttons.cancel.label}</a>`:""}\n                    ${r.buttons.ok?`<a href="#" id="${r.buttons.ok.id}" class="button button-confirm">${r.buttons.ok.label}</a>`:""}\n                </div>\n                `:""}\n            </div>\n        </div>\n    `);return r.buttons.cancel&&"function"==typeof r.buttons.cancel.callback&&t.querySelector("#"+r.buttons.cancel.id).addEventListener("click",r.buttons.cancel.callback,!1),r.buttons.ok&&"function"==typeof r.buttons.ok.callback&&t.querySelector("#"+r.buttons.ok.id).addEventListener("click",r.buttons.ok.callback,!1),e("app").append(t),t}window.EVENTS=t,window.dispatch=n,window.listen=s;const d="https://kokbackend.glitch.me";function u(e="GET",o=!1){let l={method:e,mode:"cors",cache:"no-cache",credentials:"same-origin",headers:{"Content-Type":"application/json"},redirect:"follow",referrerPolicy:"no-referrer"};return!1!==o&&(l.body=JSON.stringify(o)),l}async function g(e="POST",o="",l={}){const r=d+o;return(await fetch(r,u(e,l))).json()}class b{static prefix="kok_";constructor(){}load(){}new(){}static removeItem(e){return localStorage.removeItem(b.prefix+e)}static setItem(e,o=""){return localStorage.setItem(b.prefix+e,JSON.stringify(o))}static getItem(e,o=!1){let l=localStorage.getItem(b.prefix+e);return null===l?o:JSON.parse(l)}}class E{lobby=!1;Player;reloading=!1;constructor(e){s(t.LOBBY_CREATED,(e=>{this.lobby=e.detail.lobby})),s(t.LOBBY_JOINED,(e=>{this.lobby=e.detail.lobby})),this.Player=e,this.reloading=setInterval((()=>{this.reload()}),1e3)}async reload(){}async create(e=o(6)){return await async function(e="",o={}){return g("POST",e,o)}("/games",E.template(e,this.Player.id)).then((e=>this.store(e))).then((e=>(n(t.LOBBY_CREATED,{lobby:e}),e)))}store(e){return this.lobby=e,b.setItem("lobby",e.code),e}async join(e){return await async function(e="",o={}){const l=d+e;return(await fetch(l,u())).json()}(`/games/${e}`).then((o=>o.length>0?(n(t.LOBBY_JOINED,{lobby:o[0]}),this.store(o[0])):this.create(e)))}static template(e="",o=-1){const l={...v};return l.code=e,l.playerId=o,l}async delete(){b.removeItem("lobby");const e=this.lobby.code;return this.lobby.playerId!==this.Player.id||await async function(e=""){return g("DELETE",e)}(`/games/${e}`).then((()=>{b.removeItem("lobby"),n(t.LOBBY_DELETED,{lobbyId:e})}))}}const v={members:[],playerId:-1,code:"KOK123",data:{columnScores:{A:-1,B:-1,C:-1,D:-1,E:-1,F:-1,G:-1,H:-1,I:-1,J:-1,K:-1,L:-1,M:-1,N:-1,O:-1},colorScores:{high:{yellow:-1,green:-1,blue:-1,red:-1,orange:-1},low:{yellow:-1,green:-1,blue:-1,red:-1,orange:-1}}}},m=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"yellow"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"green"},{color:"red"},{color:"orange"},{color:"blue",star:!0},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow",star:!0},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"green"},{color:"orange"},{color:"red",star:!0},{color:"blue"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"green"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"orange"},{color:"green",star:!0},{color:"blue"},{color:"blue"},{color:"red"},{color:"red"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green",star:!0},{color:"orange"},{color:"red"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"red"},{color:"green"},{color:"orange"},{color:"yellow",star:!0},{color:"yellow"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"green"},{color:"orange"},{color:"orange"},{color:"yellow"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"red",star:!0},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"blue"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"red",star:!0},{color:"red"},{color:"blue"},{color:"orange"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]}],y=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"green",star:!0}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"orange"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"yellow"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"red"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"red"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"green"},{color:"green",star:!0}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"green"},{color:"blue"},{color:"yellow"},{color:"orange",star:!0}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"yellow",star:!0},{color:"blue"},{color:"orange"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"blue"},{color:"blue"},{color:"red",star:!0},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"blue"},{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"orange"},{color:"orange"},{color:"green"}]}],L=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"blue"},{color:"orange"},{color:"green",star:!0},{color:"green"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"green"},{color:"red"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"red",star:!0},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"red"},{color:"yellow",star:!0},{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"green",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"orange"},{color:"orange"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"blue"},{color:"red",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"},{color:"yellow",star:!0},{color:"green"},{color:"green"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"blue",star:!0},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"blue"},{color:"blue"},{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"red"},{color:"red"},{color:"red"},{color:"yellow"}]}],h=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"green"},{color:"green"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"blue"},{color:"yellow",star:!0},{color:"yellow"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"green"},{color:"green"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"red"},{color:"red"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"green",star:!0},{color:"green"},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"orange"},{color:"orange"},{color:"red"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"yellow",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"green"},{color:"red"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"green"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"yellow"},{color:"blue"},{color:"orange",star:!0},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green",star:!0},{color:"red"},{color:"red"},{color:"blue"},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"yellow"},{color:"red",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"red"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"yellow"},{color:"orange",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"red"}]}];class p{selectedLevel=!1;static levelMap={level1:m,level2:y,level3:L,level4:h};constructor(){s(t.LEVEL_RESET,(()=>{this.selectedLevel=!1})),s(t.LEVEL_LOADED,(()=>{n(t.MODAL_HIDE,{modalId:"selectLevelModal"})})),s(t.LEVEL_SELECT,(e=>{const{selectedLevel:o}=e.detail;this.level=o,this.save(),this.notify()})),this.selectedLevel=b.getItem("level")}reset(){b.removeItem("level"),this.selectedLevel=!1}select(){const r="selectLevelModal";e(r)?n(t.MODAL_SHOW,{modalId:r}):function(){i({id:"selectLevelModal",visible:!0,message:!1,body:'\n                <div class="new-game-container">\n                    <div class="level-image-container">\n                        <a href="#">\n                            <span>Level 1</span>\n                            <img src="/images/level1.png" alt="Level 1" class="level-image" id="level1">\n                        </a>\n                        <a href="#">\n                            <span>Level 2</span>\n                            <img src="/images/level2.png" alt="Level 2" class="level-image" id="level2">\n                        </a>\n                        <a href="#">\n                            <span>Level 3</span>\n                            <img src="/images/level3.png" alt="Level 3" class="level-image" id="level3">\n                        </a>\n                        <a href="#">\n                            <span>Level 4</span>\n                            <img src="/images/level4.png" alt="Level 4" class="level-image" id="level4">\n                        </a>\n                    </div>\n                    <div class="lobby-container">\n                        <label for="lobbyKey">Create/join lobby:</label><input maxlength="6" type="text" id="lobbyKey" placeholder="6 letters" required /><button id="randomizeLobby">Random</button><button id="start">Start</button>\n                    </div>\n                </div>\n            ',buttons:!1});let r=!1;l(".level-image-container a",(e=>{e.addEventListener("click",(e=>{e.preventDefault(),l(".level-image-container a",(e=>{e.classList.remove("selected")})),e.target.parentElement.classList.add("selected"),r=e.target.id}),!1)})),e("lobbyKey").addEventListener("keyup",(e=>{e.target.value=e.target.value.toUpperCase().trim()}),!1),e("start").addEventListener("click",(o=>{if(o.preventDefault(),!1===r)return alert(a.notification.selectLevel),!1;n(t.LEVEL_SELECT,{selectedLevel:r}),n(t.LOBBY_JOIN,{lobbyId:e("lobbyKey").value})}),!1),e("randomizeLobby").addEventListener("click",(l=>{l.preventDefault(),e("lobbyKey").value=o(6).toUpperCase()}),!1)}()}set level(e){this.selectedLevel=!1!==e&&e}get level(){return p.levelMap[this.selectedLevel]}save(){b.setItem("level",this.selectedLevel)}notify(){n(t.LEVEL_LOADED,{level:this.selectedLevel})}}class S{static JOKER_VALUE=1;static STAR_VALUE=-2;constructor(){s(t.JOKER_SELECTED,(e=>{dispatch(t.RENDER_SCORES,{scores:{jokers:this.jokerScore}})})),s(t.STAR_SELECTED,(()=>{dispatch(t.RENDER_SCORES,{scores:{stars:this.starScore}})})),s(t.SCORE_RELOAD,(()=>{dispatch(t.RENDER_SCORES,{scores:{bonus:this.bonusScore,columns:this.columnScore,jokers:this.jokerScore,stars:this.starScore,total:this.total}})})),s(t.SCORE_TOTAL_TOGGLE,(()=>{this.toggleTotalScore()}))}get total(){return this.bonusScore+this.columnScore+this.jokerScore+this.starScore}get columnScore(){let e=document.querySelectorAll("span.column-score.active"),o=0;return Array.prototype.forEach.call(e,(e=>{let l=parseInt(e.innerText);o+=l})),o}get jokerScore(){let e=document.getElementsByClassName("joker"),o=e.length,l=0;return Array.prototype.forEach.call(e,(e=>{e.classList.contains("used")&&l++})),(o-l)*S.JOKER_VALUE}get bonusScore(){let e=document.querySelectorAll(".final-selected span"),o=0;return Array.prototype.forEach.call(e,(e=>{o+=parseInt(e.innerText)})),o}get starScore(){const e=document.querySelectorAll("span.selected span.star").length;return(document.querySelectorAll("span.star").length-e)*S.STAR_VALUE}toggleTotalScore(){let o=e("totalScore");o.classList.contains("hide")?(o.innerText=this.total,o.classList.remove("hide")):(o.innerText="",o.classList.add("hide"))}}class w{#cachedPlayer=!1;constructor(){const e=b.getItem("player",!1);!1!==e?this.#cachedPlayer=e:this.createPlayer()}createPlayer(){const e=prompt(a.notification.playerName);this.#cachedPlayer={name:e,id:Math.floor(1e3*Math.random())},b.setItem("player",this.#cachedPlayer)}delete(){b.removeItem("player")}get name(){return this.#cachedPlayer.name}get id(){return this.#cachedPlayer.id}}class O{static COLORS=["green","yellow","blue","red","orange"];static TOTAL_JOKERS=8;Lobby;Level;Score;Player;State;#cachedState=!1;constructor(e=!1){this.Level=new p,this.Score=new S,this.Player=new w,this.State=new b,s(t.GAME_RESET,(()=>{n(t.GAME_START)}));const o=this;s(t.GAME_NEW,(()=>{o.resetState()})),s(t.GAME_START,(()=>{this.start()})),s(t.LOBBY_JOIN,(e=>{const{lobbyId:o}=e.detail;this.Lobby=new E(this.Player),this.Lobby.join(o).then((e=>{n(t.LOBBY_READY,{lobby:e})}))})),e?s(t.LEVEL_LOADED,(()=>{console.log("creating offline state"),this.state=this.createState(),n(t.RENDER_LEVEL)})):s(t.LOBBY_READY,(()=>{console.log("creating state"),this.state=this.createState(),n(t.RENDER_LEVEL)})),console.log("New Game",this)}start(){!1===this.state?(console.log("no state"),this.Level.select()):(console.log("load state"),this.loadGame())}loadGame(){this.Lobby=new E(this.Player),this.Lobby.join(b.getItem("lobby")).then((()=>{n(t.RENDER_LEVEL)}))}resetState(){this.Level.reset(),this.Lobby.delete(),b.removeItem("state"),this.#cachedState=!1,n(t.GAME_RESET)}createState(){let e,o={grid:this.Level.level,jokers:[],colorScores:{high:[],low:[]}};for(e=0;e<O.TOTAL_JOKERS;e++)o.jokers.push({selected:!1});return O.COLORS.forEach((e=>{o.colorScores.high.push({color:e,value:0}),o.colorScores.low.push({color:e,value:0})})),o}get state(){return!1===this.#cachedState?b.getItem("state",!1):this.#cachedState}set state(e){b.setItem("state",e),this.#cachedState=e}updateState(e,o,l,r,c="grid"){let a=this.state,s=!1;a.grid.forEach(((t,n)=>{t.column===e&&(a.grid[n][c][o][l]=r,s=!0)})),s&&(this.state=a,n(t.RENDER_LEVEL))}updateBlockState(e,o,l,r){let c=this.state,a=!1;c.grid.forEach(((t,n)=>{t.column===e&&(c.grid[n].grid[o][l]=r,a=!0)})),a&&(this.state=c,n(t.RENDER_LEVEL))}updateJokerState(e,o){let l=this.state,r=!1;l.jokers.forEach(((l,c)=>{c===e&&(l.selected=o,r=!0)})),r&&(this.state=l,n(t.RENDER_LEVEL))}updateColorScoreState(e,o,l){let r=!1,c=this.state;c.colorScores[e].forEach((e=>{e.color===o&&(e.value=l,r=!0)})),r&&(this.state=c,n(t.RENDER_LEVEL))}}window.kok=new class{currentGame=!1;constructor(){s(t.MODAL_TOGGLE,(o=>{const{modalId:l}=o.detail;e(l)&&e(l).classList.toggle("show")})),s(t.MODAL_HIDE,(o=>{const{modalId:l}=o.detail;e(l)&&e(l).classList.contains("show")&&e(l).classList.remove("show")})),s(t.MODAL_SHOW,(o=>{const{modalId:l}=o.detail;e(l)&&!e(l).classList.contains("show")&&e(l).classList.add("show")})),this.currentGame=new O,this.parseOrientationOverlay(),this.parseGenericLoading(),s(t.RENDER_LEVEL,(()=>{this.render()})),s(t.RENDER_JOKER_SCORE,(e=>{this.renderJokerScore(e.detail.value)})),s(t.RENDER_SCORES,(e=>{const{scores:o}=e.detail;void 0!==o.bonus&&this.renderBonusScore(o.bonus),void 0!==o.columns&&this.renderColumnScore(o.columns),void 0!==o.jokers&&this.renderJokerScore(o.jokers),void 0!==o.stars&&this.renderStarScore(o.stars)})),n(t.GAME_START)}renderBonusScore(o){e("bonusTotal").innerText=o}renderColumnScore(o){e("columnsTotal").innerText=o}renderJokerScore(o){e("jokerTotal").innerText=o}renderStarScore(o){e("starsTotal").innerText=o}parseOrientationOverlay(){i({id:"orientationModal",message:a.notification.landscapeMode})}parseGenericLoading(){i({visible:!1,id:"genericLoading",message:"Aan het laden.. een moment geduld."})}parseColumnGrid(o){e("blockGrid").innerHTML="",o.grid.forEach((o=>{e("blockGrid").append(this.parseColumn(o))}));let l=document.querySelectorAll(".score-block:not(.final-score)");Array.prototype.forEach.call(l,(e=>{e.addEventListener("click",(()=>{let o=!e.classList.contains("selected");this.currentGame.updateBlockState(e.data.column,e.data.row,"selected",o),n(t.GRID_BLOCK_SELECTED,{selected:o,block:e}),e.querySelectorAll(".star").length>0&&n(t.STAR_SELECTED,{selected:o,block:e})}),!1)}))}parseJokerColumn(o){let l=e("jokerContainer");l.innerHTML="",o.jokers.forEach((e=>{let o=r("span",{className:"joker",innerText:"!"});e.selected&&o.classList.add("used"),l.append(o)}));let c=document.getElementsByClassName("joker");Array.prototype.forEach.call(c,((e,o)=>{e.addEventListener("click",(()=>{let l=!e.classList.contains("used");this.currentGame.updateJokerState(o,l),n(t.JOKER_SELECTED,{joker:e,selected:l})}),!1)}))}parseScoreColumns(o){e("scoreColumn1").innerHTML="",o.colorScores.high.forEach((o=>{let l=r("span",{className:"score-block final-score "+o.color});-1===o.value&&l.classList.add("selected"),5===o.value&&l.classList.add("final-selected"),r("span",{innerText:5},l),e("scoreColumn1").append(l)})),e("scoreColumn2").innerHTML="",o.colorScores.low.forEach((o=>{let l=r("span",{className:"score-block final-score "+o.color});-1===o.value&&l.classList.add("selected"),3===o.value&&l.classList.add("final-selected"),r("span",{innerText:3},l),e("scoreColumn2").append(l)}));let l=function(e,o=5,l=-1){return e.classList.contains("final-selected")||e.classList.contains("selected")?e.classList.contains("final-selected")&&!e.classList.contains("selected")?l:0:o},c=function(e){let o="";return O.COLORS.forEach((l=>{e.classList.contains(l)&&(o=l)})),o},a=document.querySelectorAll("#scoreColumn1 .final-score");Array.prototype.forEach.call(a,(e=>{e.addEventListener("click",(()=>{this.currentGame.updateColorScoreState("high",c(e),l(e,5,-1)),n(t.SCORE_RELOAD)}),!1)}));let s=document.querySelectorAll("#scoreColumn2 .final-score");Array.prototype.forEach.call(s,(e=>{e.addEventListener("click",(()=>{this.currentGame.updateColorScoreState("low",c(e),l(e,3,-1)),n(t.SCORE_RELOAD)}),!1)}));let i=document.querySelectorAll("span.column-score");Array.prototype.forEach.call(i,(e=>{e.addEventListener("click",(()=>{let o,l=e.data.column,r=e.data.row;o=e.classList.contains("active")||e.classList.contains("taken")?e.classList.contains("active")&&!e.classList.contains("taken")?"taken":"default":"active",this.currentGame.updateState(l,r,"state",o,"score"),n(t.SCORE_RELOAD)}),!1)}))}parseGrid(){this.parseColumnGrid(this.currentGame.state),this.parseJokerColumn(this.currentGame.state),this.parseScoreColumns(this.currentGame.state),n(t.ENGINE_GRID_RENDER_COMPLETE)}parseTotalScores(){if(e("totalScores"))return;const o=`\n            <div id="totalScores">\n                <div class="totals" id="bonus"><label>${a.label.bonus}</label><span class="label">=</span><span id="bonusTotal" class="totalValue">15</span></div>\n                <div class="totals" id="columns"><label>${a.label.columns}</label><span class="label">+</span><span id="columnsTotal" class="totalValue"></span></div>\n                <div class="totals" id="jokers"><label>${a.label.jokers}</label><span class="label">+</span><span id="jokerTotal" class="totalValue"></span></div>\n                <div class="totals" id="stars"><label>${a.label.stars}</label><span class="label">-</span><span id="starsTotal" class="totalValue"></span></div>\n                <div class="totals" id="totals">\n                    <label>${a.label.totals}</label><span class="label">&nbsp;</span><span id="totalScore" class="totalValue hide"></span>\n                </div>\n            </div>\n        `;e("scoreColumn").append(c(o)),e("totals").addEventListener("click",(()=>{n(t.SCORE_SHOW)}),!1)}renderNewGameButton(o){const l="newGame";if(e(l))return;const r=function(e={}){const o={callback:()=>!1,className:"button",...e};let l=c(`<a>${o.label}</a>`);return o.callback&&"function"==typeof o.callback&&l.addEventListener("click",o.callback,!1),o.className&&(l.className=o.className),o.id&&(l.id=o.id),l}({callback:o,id:l,label:a.label.newGame,className:"new-game"});return e("grid").append(r),r}render(e){this.parseGrid(e),this.parseTotalScores();let o=function(){const e="newGameModal";return i({id:e,message:a.modal.newGame.body,buttons:{cancel:{id:e+"Cancel",label:a.label.cancel,callback(o){o.preventDefault(),n(t.MODAL_TOGGLE,{modalId:e})}},ok:{id:e+"Confirm",label:a.label.ok,callback(o){o.preventDefault(),n(t.MODAL_TOGGLE,{modalId:e}),n(t.GAME_NEW)}}}})}();this.renderNewGameButton((e=>{e.preventDefault(),n(t.MODAL_TOGGLE,{modalId:o.id})})),n(t.SCORE_RELOAD)}parseColumn(e){let o=r("div",{className:"column"+("H"===e.column?" highlight":"")});r("span",{className:"letter rounded-block",innerText:e.column},o),e.grid.forEach(((l,c)=>{const a=r("span",{className:"score-block "+l.color,data:{column:e.column,row:c}});l.star&&r("span",{className:"star",innerText:"*"},a),l.selected&&a.classList.add("selected"),o.append(a)}));let l=r("div",{className:"column-score"});e.score.forEach(((o,c)=>{r("span",{className:"rounded-block column-score"+(o.state&&"default"!==o.state?" "+o.state:""),innerText:o.value,data:{column:e.column,row:c}},l)})),o.append(l);let c=o.querySelectorAll(".score-block"),a=o.querySelectorAll(".selected"),s=o.querySelector(".letter").innerText.toUpperCase();return c.length===a.length&&n(t.GRID_COLUMN_COMPLETE,{columnLetter:s}),o}};
