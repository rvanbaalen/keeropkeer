function e(e){return document.getElementById(e)}function o(e=6){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,e)}function l(e,o){Array.prototype.forEach.call(document.querySelectorAll(e),o)}function r(e,o={},l){let r=document.createElement(e);return Object.keys(o).forEach((function(e){r[e]=o[e]})),l&&l.append(r),r}function t(e){let o=r("div");return o.innerHTML=e,o.firstElementChild}var a={modal:{newGame:{body:"Weet je zeker dat je een nieuw spel wil beginnen?"}},label:{cancel:"Annuleren",ok:"OK",newGame:"Nieuw spel",bonus:"bonus",columns:"A-O",stars:"Sterren",totals:"Totaal",jokers:"Jokers"},messages:{connecting:"Bezig met verbinden ..."},notification:{landscapeMode:"Draai het scherm horizontaal om te beginnen.",selectLevel:"Selecteer een level.",playerName:"Wat is je naam?",createLobby:"Kies een spelcode:",creatingLobby:"Bezig met het aanmaken van de lobby...",playerJoined:{title:"Een speler is verbonden",message:(e="onbekend")=>`${e} speelt mee!`}},lobbyStats:(e,o)=>` er ${o>1?"zijn":"is"} ${o} speler${o>1?"s":""} in lobby '${e}'`};document.querySelector("body").classList.add("lang-nl");const c=a,n="game-new",s="game-start",i="game-create-state",d="score-reload",u="score-total-toggle",g="modal-toggle",m="modal-hide",v="modal-show",b="grid-block-selected",y="grid-render-complete",p="joker-selected",h="star-selected",w="render-level",S="loading",L="score-toggle-column",f="navigate-from",k="navigate-to",T="navigate",C=e("app"),$={};function E(e,o){let l=new CustomEvent(e,{detail:o});C.dispatchEvent(l),$[e]?.once&&C.removeEventListener(e,$[e].callback,!1)}function P(e,o,l=!1){C.addEventListener(e,o,!1),l&&($[e]={once:!0,callback:o})}function A(l){let r={...{id:"modal-"+o(),message:"No modal message is set.",buttons:!1,appendTo:"#app",visible:!1},...l};!0===r.buttons&&(r.buttons={cancel:{id:r.id+"-cancel",label:c.label.cancel},ok:{id:r.id+"-ok",label:c.label.ok}});let a=t(`\n        <div class="modal-overlay${r.visible?" show":""}" id="${r.id}"${r.selfDestruct?' data-selfDestruct="true"':""}>\n            <div class="modal-container">\n                ${r.title?`\n                <div class="modal-title">\n                    <h2>${r.title}</h2>\n                </div>\n                `:""}\n                ${r.body&&!r.message?r.body:`\n                <div class="modal-body">\n                    <p>${r.message}</p>\n                </div>\n                `}\n                ${r.buttons?`\n                <div class="modal-button-bar">\n                    ${r.buttons.cancel?`<a href="#" id="${r.buttons.cancel.id}" class="button button-cancel">${r.buttons.cancel.label}</a>`:""}\n                    ${r.buttons.ok?`<a href="#" id="${r.buttons.ok.id}" class="button button-confirm">${r.buttons.ok.label}</a>`:""}\n                </div>\n                `:""}\n            </div>\n        </div>\n    `);return r.buttons.cancel&&"function"==typeof r.buttons.cancel.callback&&a.querySelector("#"+r.buttons.cancel.id).addEventListener("click",r.buttons.cancel.callback,!1),r.buttons.ok&&"function"==typeof r.buttons.ok.callback&&a.querySelector("#"+r.buttons.ok.id).addEventListener("click",r.buttons.ok.callback,!1),e("app").append(a),a}const I=(0,window.io)("http://192.168.1.111:3000/",{autoConnect:!1});I.onAny(((e,...o)=>{console.log(e,o)})),console.log("Setup socket server ","http://192.168.1.111:3000/");class j{static prefix="kok_";static removeItem(e){return localStorage.removeItem(j.prefix+e)}static setItem(e,o=""){return localStorage.setItem(j.prefix+e,JSON.stringify(o))}static getItem(e,o=!1){let l=localStorage.getItem(j.prefix+e);return null===l?o:JSON.parse(l)}}class G{static render(){return`\n            ${G.renderViewGame()}\n            ${G.renderViewLevelSelect()}\n        `}static applicationWindow(e,o){return`\n            <div id="${e}" class="applicationWindow hidden">${o}</div>\n        `}static renderViewGame(){return G.applicationWindow("gameView",'\n            <div class="gameViewRows">\n                <div class="columns">\n                    <div class="jokers" id="jokerContainer"></div>\n                    <div id="blockGrid"></div>\n                    <div class="scoreContainer">\n                        <div class="column" id="scoreColumn">\n                            <div id="scoreColumn1"></div>\n                        </div>\n                        <div class="column" id="scoreColumn2"></div>\n                    </div>\n                </div>\n                <div id="gameData">\n                    <ul id="activePlayers" class="blockList playerList"></ul>\n                    <a id="newGameButton">Nieuw spel</a>\n                </div>\n            </div>\n       ')}static renderViewLevelSelect(){return G.applicationWindow("levelSelect",'\n            <div id="playerContainer">\n                <h2 class="rainbow">Spelers</h2>\n                <ul id="players" class="blockList playerList"></ul>\n                <h2 class="rainbow">Lobby</h2>\n                <a href="#" id="lobbyCode">Cool</a>\n            </div>\n            <div id="levelContainer">\n                <h2 class="rainbow">Selecteer een level</h2>\n                <ul id="levels" class="blockList">\n                    <li class="level">\n                        <a href="#" class="level1" data-level="level1">\n                            <img src="/images/level1.png" alt="level1" />\n                            <span class="label">Level 1</span>\n                        </a>\n                    </li>\n                    <li class="level">\n                        <a href="#" class="level2" data-level="level2">\n                            <img src="/images/level2.png" alt="level2" />\n                            <span class="label">Level 2</span>\n                        </a>\n                    </li>\n                    <li class="level">\n                        <a href="#" class="level3" data-level="level3">\n                            <img src="/images/level3.png" alt="level3" />\n                            <span class="label">Level 3</span>\n                        </a>\n                    </li>\n                    <li class="level">\n                        <a href="#" class="level4" data-level="level4">\n                            <img src="/images/level4.png" alt="level4" />\n                            <span class="label">Level 4</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        ')}static renderPlayer(e){return`<li class="player" data-player="${e.username}" data-player-id="${e.userId}">${e.username}</li>`}static renderPlayerAvatar({url:e,playerName:o}){return`<img src="${e}" alt="${o}"/><span>${o}</span>`}}class N{#lobby=!1;state=!1;constructor(e){this.lobby=e,I.on("player:stats",(({player:e})=>{N.setLobbyCodeDom({code:e.lobbyCode})})),I.on("lobby:updated",(({lobby:e})=>{this.lobby=e})),I.once("lobby:joined",(({lobby:e})=>{this.lobby=e})),I.once("lobby:created",(({lobby:e})=>{this.lobby=e})),I.on("player:connected",(({player:e})=>{N.addPlayerToLobby(e)})),I.on("player:disconnected",(({player:e})=>{N.removePlayerFromLobby(e)}))}static loadAvatars(){l("#players .player:not(.avatar), #activePlayers .player:not(.avatar)",(e=>{const o=e.innerText,l=new URL(`https://avatars.dicebear.com/api/bottts/${o}.svg?mood[]=happy`);e.innerHTML=G.renderPlayerAvatar({url:l,playerName:o}),e.classList.add("avatar")}))}static getPlayerElement(e){return document.querySelectorAll(`[data-player-id="${e.userId}"]`)[0]}static addPlayerToLobby(e){N.getPlayerElement(e)||(l("#players, #activePlayers",(o=>{o.innerHTML+=G.renderPlayer(e)})),N.loadAvatars())}static removePlayerFromLobby(e){const o=N.getPlayerElement(e);o&&o.remove()}static setPlayers(e){l("#players, #activePlayers",(e=>{e.innerHTML=""})),e.forEach((e=>{N.addPlayerToLobby(e)}))}static async joinOrCreate(e){if(e)I.emit("lobby:join",{lobbyCode:e});else{let e=prompt(c.notification.createLobby,o(4).toUpperCase());e=e.toUpperCase(),I.emit("lobby:create",{lobbyCode:e})}return new Promise(((e,o)=>{I.once("lobby:joined",(({lobby:o})=>{e(new N(o))})),I.once("lobby:created",(({lobby:o})=>{e(new N(o))})),setTimeout((()=>{o("Lobby creation timeout.")}),1e4)}))}static setLobbyCodeDom({code:o}){const l=e("lobbyCode");l&&(l.innerText=o)}static setState(e){I.emit("lobby:state",{key:"state",value:e})}leave(){I.emit("lobby:leave",{lobbyCode:this.code})}get players(){return this.lobby?.players||[]}get code(){return this.lobby?.code}static get cachedLobbyCode(){return j.getItem("lobby",!1)}get state(){return this.lobby?.state}set lobby(e){e.code!==this.#lobby.code&&j.setItem("lobby",e.code),N.setLobbyCodeDom({code:e.code}),e.players.length>0&&N.setPlayers(e.players),this.#lobby=e}get lobby(){return this.#lobby}get playerNames(){return this.players.map((e=>e.username)).join(", ")}}const D=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"yellow"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"green"},{color:"red"},{color:"orange"},{color:"blue",star:!0},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow",star:!0},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"green"},{color:"orange"},{color:"red",star:!0},{color:"blue"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"green"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"orange"},{color:"green",star:!0},{color:"blue"},{color:"blue"},{color:"red"},{color:"red"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green",star:!0},{color:"orange"},{color:"red"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"red"},{color:"green"},{color:"orange"},{color:"yellow",star:!0},{color:"yellow"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"green"},{color:"orange"},{color:"orange"},{color:"yellow"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"red",star:!0},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"blue"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"red",star:!0},{color:"red"},{color:"blue"},{color:"orange"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]}],O=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"green",star:!0}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"orange"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"yellow"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"red"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"red"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"green"},{color:"green",star:!0}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"green"},{color:"blue"},{color:"yellow"},{color:"orange",star:!0}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"yellow",star:!0},{color:"blue"},{color:"orange"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"blue"},{color:"blue"},{color:"red",star:!0},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"blue"},{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"orange"},{color:"orange"},{color:"green"}]}],V=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"blue"},{color:"orange"},{color:"green",star:!0},{color:"green"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"green"},{color:"red"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"red",star:!0},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"red"},{color:"yellow",star:!0},{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"green",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"orange"},{color:"orange"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"blue"},{color:"red",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"},{color:"yellow",star:!0},{color:"green"},{color:"green"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"blue",star:!0},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"blue"},{color:"blue"},{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"red"},{color:"red"},{color:"red"},{color:"yellow"}]}],M=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"green"},{color:"green"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"blue"},{color:"yellow",star:!0},{color:"yellow"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"green"},{color:"green"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"red"},{color:"red"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"green",star:!0},{color:"green"},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"orange"},{color:"orange"},{color:"red"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"yellow",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"green"},{color:"red"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"green"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"yellow"},{color:"blue"},{color:"orange",star:!0},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green",star:!0},{color:"red"},{color:"red"},{color:"blue"},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"yellow"},{color:"red",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"red"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"yellow"},{color:"orange",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"red"}]}];class H{selectedLevel=!1;static levelMap={level1:D,level2:O,level3:V,level4:M};constructor(){I.on("level:selected",(({selectedLevel:e})=>{this.level!==e&&(this.level=e)})),this.registerEventHandlers()}static selectInDom(e){const o=document.querySelectorAll("#levels .level a."+e)[0];l("#levels .level a",(e=>{e.classList.remove("selected"),document.getElementById("startGame")?.remove()})),o&&(o.classList.toggle("selected"),o.innerHTML+='<span id="startGame">Start Spel &rarr;</span>')}registerEventHandlers(){const e=document.querySelectorAll("li.level > a");Array.prototype.forEach.call(e,(e=>{e.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation();const l=e.dataset.level;e.classList.contains("selected")?I.emit("game:start"):(this.level=l,I.emit("level:select",{selectedLevel:l}))}),!1)}))}reset(){j.removeItem("level"),this.selectedLevel=!1}getGrid(){return H.levelMap[this.selectedLevel]}set level(e){this.selectedLevel=e,E(i),H.selectInDom(e)}get level(){return this.selectedLevel}}class J{static JOKER_VALUE=1;static STAR_VALUE=-2;Game;constructor({Game:e}){this.Game=e,e.initialized||(P(p,(()=>{this.renderScores({scores:{jokers:this.jokerScore}})})),P(h,(()=>{this.renderScores({scores:{stars:this.starScore}})})),P(d,(()=>{this.renderScores({scores:{bonus:this.bonusScore,columns:this.columnScore,jokers:this.jokerScore,stars:this.starScore,total:this.total}})})),P(u,(()=>this.toggleTotalScore()))),I.on("grid:column-completed",(({columnLetter:e,player:o,first:l})=>{const r=l?0:1,t=document.querySelectorAll(`.column-score[data-column="${e}"][data-row="${r}"]`)[0];t&&(E(L,{element:t,row:r,column:e}),E(d))}))}renderScores({scores:e}){void 0!==e.bonus&&this.renderBonusScore(e.bonus),void 0!==e.columns&&this.renderColumnScore(e.columns),void 0!==e.jokers&&this.renderJokerScore(e.jokers),void 0!==e.stars&&this.renderStarScore(e.stars)}static getColumnScoreState(e){return e?e.classList.contains("active")||e.classList.contains("taken")?e.classList.contains("active")&&!e.classList.contains("taken")?"taken":"default":"active":"default"}get total(){return this.bonusScore+this.columnScore+this.jokerScore+this.starScore}get columnScore(){let e=document.querySelectorAll("span.column-score.active"),o=0;return Array.prototype.forEach.call(e,(e=>{let l=parseInt(e.innerText);o+=l})),o}get jokerScore(){let e=document.getElementsByClassName("joker"),o=e.length,l=0;return Array.prototype.forEach.call(e,(e=>{e.classList.contains("used")&&l++})),(o-l)*J.JOKER_VALUE}get bonusScore(){let e=document.querySelectorAll(".final-selected span"),o=0;return Array.prototype.forEach.call(e,(e=>{o+=parseInt(e.innerText)})),o}get starScore(){const e=document.querySelectorAll("span.selected span.star").length;return(document.querySelectorAll("span.star").length-e)*J.STAR_VALUE}toggleTotalScore(){const o=e("totalScore");o.classList.contains("hide")?(o.classList.remove("hide"),this.renderTotalScore()):(o.innerText="",o.classList.add("hide"))}renderBonusScore(o){e("bonusTotal").innerText=o,this.renderTotalScore()}renderColumnScore(o){e("columnsTotal").innerText=o,this.renderTotalScore()}renderJokerScore(o){e("jokerTotal").innerText=o,this.renderTotalScore()}renderStarScore(o){e("starsTotal").innerText=o,this.renderTotalScore()}renderTotalScore(){const o=e("totalScore");o.classList.contains("hide")||(console.log("set total",this.total),o.innerText=this.total)}}class q{static TRANSITION_DELAY=200;constructor(){}static hide(o){const{id:l,timeout:r=400}=o;e(l)&&(e(l).classList.remove("show"),setTimeout((()=>{const o=e(l);o&&o.remove()}),r))}static removePrevious(){let e=document.querySelectorAll(".notification.show").length;if(e>0){let e=200;l(".notification.show",(o=>{q.hide({id:o.id,timeout:e}),e+=200}))}return e}static show(o){const l=q.removePrevious(),r=o=>{"string"==typeof o&&(o={title:o});let{message:l,title:r="No message specified.",timeout:t=4e3,autoHide:a=!1}=o;const c=q.createTemplate(l,r);document.body.append(c),setTimeout((()=>{e(c.id).classList.toggle("show")}),1),a&&setTimeout((()=>{q.hide({id:c.id})}),t)};l>0?setTimeout((()=>{r(o)}),200*l+200):r(o)}static createTemplate(e,l=!1){return t(`\n            <div class="notification" id="${"notification_"+o(5)}">\n                ${l?`\n                <h2>${l}</h2>\n                `:""}\n                ${e?`\n                <p>${e}</p>\n                `:""}\n            </div>\n        `)}}class x{constructor(){}static get cachedId(){return j.getItem("sessionId")}static set cachedId(e){return j.setItem("sessionId",e)}}class B{#cachedPlayer=!1;constructor(){const e=x.cachedId;!1!==e?(I.auth={sessionId:e,username:B.cachedName},I.connect()):this.createPlayer(),I.once("player:created",(({player:e})=>{this.player=e})),I.on("player:updated",(({player:e})=>{this.player=e})),I.on("player:stats",(({totalPlayers:e,players:o})=>{B.setPlayerNamesDom({players:o}),B.setPlayerTotalDom({totalPlayers:e})})),I.on("player:connected",(({player:e})=>{q.show({title:c.notification.playerJoined.title,message:c.notification.playerJoined.message(e.username),autoHide:!0})}))}static setPlayerTotalDom({totalPlayers:o}){const l=e("playerTotal");l&&(l.innerText=o)}static setPlayerNamesDom({players:o}){const l=e("playerNames");l&&(l.innerText=o.join(", "))}static setPlayerNameDom({player:o}){const l=e("playerName");l&&(l.innerText=o.username)}createPlayer(){const e=prompt(c.notification.playerName);this.player={username:e},this.connectPlayer(this.player)}connectPlayer(e){I.auth=e,I.connect()}delete(){return j.removeItem("player")}set player(e){if(!e.username)throw new Error("Invalid player object. No username.");this.#cachedPlayer=e,j.setItem("player",e.username),B.setPlayerNameDom(e.username)}get player(){return this.#cachedPlayer}static get cachedName(){return j.getItem("player")}get name(){return this.#cachedPlayer.username}get id(){return this.#cachedPlayer?.id||o(6).toLowerCase()}}class R{currentView;defaultView="levelSelect";constructor(){this.currentView=document.querySelectorAll(".applicationWindow:not(.hidden)")[0],P(T,(o=>{const{page:l}=o.detail;e(l)&&this.navigate(l)}))}hideCurrent(){this.currentView&&(E(f,{page:this.currentView}),this.currentView.classList.add("hidden"))}navigate(o){this.currentView?.id!==o&&(this.hideCurrent(),this.currentView=e(o),this.currentView.classList.remove("hidden"),E(k,{page:this.currentView}))}static navigateTo(e){E(T,{page:e})}}class z{static COLORS=["green","yellow","blue","red","orange"];static TOTAL_JOKERS=8;initialized=!1;Lobby;Level;Score;Player;#cachedState=!1;constructor(){this.Player=new B,I.on("game:start",(()=>{E(s)})),I.on("connect",(()=>{this.initialize()})),P(i,(()=>{this.state=this.createState()})),P(n,(()=>{this.new()})),P(s,(()=>{this.continue()})),P(L,(({element:e,row:o,column:l})=>{this.updateState(l,o,"state",J.getColumnScoreState(e),"score")}))}initialize(){N.joinOrCreate(N.cachedLobbyCode).then((e=>{this.Lobby=e,this.Level=new H({Lobby:e,Game:this}),this.Score=new J({Game:this}),this.start(),this.initialized=!0})).catch((e=>{console.error("Failed to create lobby",e),this.initialized=!1}))}start(){this.state?this.continue():R.navigateTo("levelSelect")}new(){this.resetState(),this.start()}continue(){R.navigateTo("gameView"),E(w)}resetState(){this.Level.reset(),this.state=!1}createState(){let e,o={grid:this.Level.getGrid(),jokers:[],colorScores:{high:[],low:[]}};for(e=0;e<z.TOTAL_JOKERS;e++)o.jokers.push({selected:!1});return z.COLORS.forEach((e=>{o.colorScores.high.push({color:e,value:0}),o.colorScores.low.push({color:e,value:0})})),o}get state(){return this.#cachedState||(this.#cachedState=j.getItem("state",!1)),this.#cachedState}set state(e){this.#cachedState=e,e?j.setItem("state",e):(console.log("Clearing local state"),j.removeItem("state"))}updateState(e,o,l,r,t="grid"){let a=this.state,c=!1;a.grid.forEach(((n,s)=>{n.column===e&&(a.grid[s][t][o][l]=r,c=!0)})),c&&(this.state=a,E(w))}updateBlockState(e,o,l,r){let t=this.state,a=!1;t.grid.forEach(((c,n)=>{c.column===e&&(t.grid[n].grid[o][l]=r,a=!0)})),a&&(this.state=t,E(w))}updateJokerState(e,o){let l=this.state,r=!1;l.jokers.forEach(((l,t)=>{t===e&&(l.selected=o,r=!0)})),r&&(this.state=l,E(w))}updateColorScoreState(e,o,l){let r=!1,t=this.state;t.colorScores[e].forEach((e=>{e.color===o&&(e.value=l,r=!0)})),r&&(this.state=t,E(w))}}class K{currentGame=!1;application;version;constructor(){e("app").innerHTML+=G.render(),this.application=new R,P(g,(o=>{const{modalId:l}=o.detail;e(l)&&e(l).classList.toggle("show")})),P(m,(o=>{const{modalId:l}=o.detail,r=e(l);r&&r.classList.contains("show")&&r.classList.remove("show"),r.dataset.selfdestruct&&r.remove()})),P(v,(o=>{const{modalId:l}=o.detail;e(l)&&!e(l).classList.contains("show")&&e(l).classList.add("show")})),this.currentGame=new z,this.parseOrientationOverlay(),this.parseGenericLoading(),e("connecting-message").innerText=c.messages.connecting,P(S,(()=>{E(v,{modalId:"genericLoading"})})),P(w,(()=>{this.render()})),I.on("grid:column-completed",(({columnLetter:e,player:o})=>{console.log(`Player ${o.username} completed column ${e}`)})),I.on("version",(e=>{j.setItem("version",e)})),I.on("session",(({sessionId:e})=>{x.cachedId=e})),I.on("connect",(()=>{document.body.classList.add("connected")})),I.on("disconnect",(()=>{document.body.classList.remove("connected")})),e("newGameButton").addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation();const o="newGameModal";A({id:o,visible:!0,selfDestruct:!0,message:c.modal.newGame.body,buttons:{cancel:{id:o+"Cancel",label:c.label.cancel,callback(e){e.preventDefault(),e.stopPropagation(),E(m,{modalId:o})}},ok:{id:o+"Confirm",label:c.label.ok,callback(e){e.preventDefault(),e.stopPropagation(),E(m,{modalId:o}),E(n)}}}}),E(v,{modalId:"newGameModal"})}),!1)}parseOrientationOverlay(){A({id:"orientationModal",message:c.notification.landscapeMode})}parseGenericLoading(){A({visible:!1,id:"genericLoading",message:"Aan het laden.. een moment geduld."})}parseColumnGrid(o){const l=e("blockGrid");l.innerHTML="",o.grid.forEach((e=>{l.innerHTML+=this.parseColumn(e)}));let r=document.querySelectorAll(".score-block:not(.final-score)");Array.prototype.forEach.call(r,(e=>{e.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation();let l=!e.classList.contains("selected");this.currentGame.updateBlockState(e.dataset.column,e.dataset.row,"selected",l),E(b,{selected:l,block:e}),e.querySelectorAll(".star").length>0&&E(h,{selected:l,block:e})}),!1)}))}parseJokerColumn(o){e("jokerContainer").innerHTML=o.jokers.map((e=>`<span class="joker${e.selected?" used":""}">!</span>`)).join("");let l=document.getElementsByClassName("joker");Array.prototype.forEach.call(l,((e,o)=>{e.addEventListener("click",(l=>{l.preventDefault(),l.stopPropagation();let r=!e.classList.contains("used");this.currentGame.updateJokerState(o,r),E(p,{joker:e,selected:r})}),!1)}))}parseScoreColumns(o){e("scoreColumn1").innerHTML=o.colorScores.high.map((e=>{return`<span class="score-block final-score ${e.color}${o=e.value,-1===o?" selected":5===o?" final-selected":""}"><span>5</span></span>`;var o})).join(""),e("scoreColumn2").innerHTML="",o.colorScores.low.forEach((o=>{let l=r("span",{className:"score-block final-score "+o.color});-1===o.value&&l.classList.add("selected"),3===o.value&&l.classList.add("final-selected"),r("span",{innerText:3},l),e("scoreColumn2").append(l)}));let l=function(e,o=5,l=-1){return e.classList.contains("final-selected")||e.classList.contains("selected")?e.classList.contains("final-selected")&&!e.classList.contains("selected")?l:0:o},t=function(e){let o="";return z.COLORS.forEach((l=>{e.classList.contains(l)&&(o=l)})),o},a=document.querySelectorAll("#scoreColumn1 .final-score");Array.prototype.forEach.call(a,(e=>{e.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation(),this.currentGame.updateColorScoreState("high",t(e),l(e,5,-1)),E(d)}),!1)}));let c=document.querySelectorAll("#scoreColumn2 .final-score");Array.prototype.forEach.call(c,(e=>{e.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation(),this.currentGame.updateColorScoreState("low",t(e),l(e,3,-1)),E(d)}),!1)}));let n=document.querySelectorAll("span.column-score");Array.prototype.forEach.call(n,(e=>{e.addEventListener("click",(o=>{o.preventDefault(),o.stopPropagation(),E(L,{column:e.dataset.column,element:e}),E(d)}),!1)}))}parseGrid(){const{state:e}=this.currentGame;this.parseColumnGrid(e),this.parseJokerColumn(this.currentGame.state),this.parseScoreColumns(this.currentGame.state),E(y)}parseTotalScores(){if(e("totalScores"))return;const o=`\n            <div id="totalScores">\n                <div class="totals" id="bonus"><label class="rainbow">${c.label.bonus}</label><span class="label">=</span><span id="bonusTotal" class="totalValue">15</span></div>\n                <div class="totals" id="columns"><label>${c.label.columns}</label><span class="label">+</span><span id="columnsTotal" class="totalValue"></span></div>\n                <div class="totals" id="jokers"><label>${c.label.jokers}</label><span class="label">+</span><span id="jokerTotal" class="totalValue"></span></div>\n                <div class="totals" id="stars"><label>${c.label.stars}</label><span class="label">-</span><span id="starsTotal" class="totalValue"></span></div>\n                <div class="totals" id="totals">\n                    <label>${c.label.totals}</label><span class="label">&nbsp;</span><span id="totalScore" class="totalValue hide"></span>\n                </div>\n            </div>\n        `;e("scoreColumn").innerHTML+=o,e("totals").addEventListener("click",(e=>{e.preventDefault(),e.stopPropagation(),E(u)}),!1)}renderNewGameButton(o){const l="newGameButton";if(e(l))return;const r=function(e={}){const o={callback:()=>!1,className:"button",...e};let l=t(`<a>${o.label}</a>`);return o.callback&&"function"==typeof o.callback&&l.addEventListener("click",o.callback,!1),o.className&&(l.className=o.className),o.id&&(l.id=o.id),l}({callback:o,id:l,label:c.label.newGame,className:"new-game"});return e("gameView").append(r),r}render(){this.parseGrid(),this.parseTotalScores(),E(d)}parseColumn(e){let o=e.grid.length,l=0,r=`\n            <div class="column${"H"===e.column?" highlight":""}">\n                <span class="rounded-block" data-letter="${e.column}">${e.column}</span>\n                ${function(o){return o.map(((o,r)=>(o.selected&&l++,`\n                    <span class="score-block${o.selected?" selected":""} ${o.color}" data-column="${e.column}" data-row="${r}">\n                        ${o.star?'<span class="star">*</span>':""}\n                    </span>\n                `))).join("")}(e.grid)}\n                <div class="column-score">${t=e.score,t.map(((o,l)=>`<span class="rounded-block column-score${o.state&&"default"!==o.state?" "+o.state:""}" data-column="${e.column}" data-row="${l}">${o.value}</span>`)).join("")}</div>\n            </div>\n        `;var t;return o===l&&I.emit("grid:column-complete",{columnLetter:e.column}),r}}try{window.engine=new K}catch(e){console.error("Failed to load game. Reset state!",e)}
