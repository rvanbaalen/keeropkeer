function e(e){return document.getElementById(e)}function o(e=6){return Math.random().toString(36).replace(/[^a-z]+/g,"").substr(0,e)}function l(e,o){Array.prototype.forEach.call(document.querySelectorAll(e),o)}function r(e,o={},l){let r=document.createElement(e);return Object.keys(o).forEach((function(e){r[e]=o[e]})),l&&l.append(r),r}function c(e){let o=r("div");return o.innerHTML=e,o.firstElementChild}var a={modal:{newGame:{body:"Weet je zeker dat je een nieuw spel wil beginnen?"}},label:{cancel:"Annuleren",ok:"OK",newGame:"Nieuw spel",bonus:"bonus",columns:"A-O",stars:"Sterren",totals:"Totaal",jokers:"Jokers"},notification:{landscapeMode:"Draai het scherm horizontaal om te beginnen.",selectLevel:"Selecteer een level.",playerName:"Wat is je naam?",createLobby:"Kies een spelcode:",creatingLobby:"Bezig met het aanmaken van de lobby...",playerJoined:{title:"Een speler is verbonden",message:(e="onbekend")=>`${e} speelt mee!`},playerDisconnected:{title:"Verbinding met speler verbroken",message:(e="onbekend")=>`${e} is niet meer verbonden.`}},lobbyStats:(e,o)=>` er ${o>1?"zijn":"is"} ${o} speler${o>1?"s":""} in lobby '${e}'`};document.querySelector("body").classList.add("lang-nl");const t=a,s={GAME_NEW:"game-new",GAME_START:"game-start",GAME_CREATE_STATE:"game-create-state",SCORE_RELOAD:"score-reload",SCORE_TOTAL_TOGGLE:"score-total-toggle",MODAL_TOGGLE:"modal-toggle",MODAL_HIDE:"modal-hide",MODAL_SHOW:"modal-show",GRID_BLOCK_SELECTED:"grid-block-selected",GRID_RENDER_COMPLETE:"grid-render-complete",JOKER_SELECTED:"joker-selected",STAR_SELECTED:"star-selected",RENDER_JOKER_SCORE:"render-joker-score",RENDER_BONUS_SCORE:"render-bonus-score",RENDER_COLUMN_SCORE:"render-column-score",RENDER_STAR_SCORE:"render-star-score",RENDER_TOTAL_SCORE:"render-total-score",RENDER_LEVEL:"render-level",RENDER_SCORES:"render-scores",LOADING:"loading",LEVEL_SELECT_DOM:"level-select-dom"},n=e("app"),i={};function d(e,o){let l=new CustomEvent(e,{detail:o});n.dispatchEvent(l),i[e]?.once&&n.removeEventListener(e,i[e].callback,!1)}function u(e,o,l=!1){n.addEventListener(e,o,!1),l&&(i[e]={once:!0,callback:o})}const g=(0,window.io)("https://dry-peak-80209.herokuapp.com/",{autoConnect:!1});function m({modalId:o,Player:r,Lobby:c,Level:a}){let{selectedLevel:n}=a;b({id:o,visible:!1,message:!1,body:`\n                <div class="new-game-container">\n                    <div class="lobby-container">\n                        <ul>\n                            <li id="playerNameWrap">Player: <span id="playerName">${r.name}</span></li>\n                            <li id="lobbyWrap">Game code: <span id="lobbyCode">${c.code}</span></li>\n                            <li id="playersJoinedWrap">Players joined (<span id="playerTotal">${c.players.length}</span>): <span id="playerNames">${c.playerNames}</span></li>\n                            <li id="startGameWrap"><button id="start">Start game</button></li>\n                        </ul>\n                    </div>\n                    <div class="level-image-container">\n                        <a href="#">\n                            <span>Level 1</span>\n                            <img src="/images/level1.png" alt="Level 1" class="level-image" id="level1">\n                        </a>\n                        <a href="#">\n                            <span>Level 2</span>\n                            <img src="/images/level2.png" alt="Level 2" class="level-image" id="level2">\n                        </a>\n                        <a href="#">\n                            <span>Level 3</span>\n                            <img src="/images/level3.png" alt="Level 3" class="level-image" id="level3">\n                        </a>\n                        <a href="#">\n                            <span>Level 4</span>\n                            <img src="/images/level4.png" alt="Level 4" class="level-image" id="level4">\n                        </a>\n                    </div>\n                </div>\n            `,buttons:!1}),u(s.MODAL_SHOW,(e=>{o===e.detail.modalId&&n&&d(s.LEVEL_SELECT_DOM,n?{level:n}:{level:""})}),!0),l(".level-image-container a",(e=>{e.addEventListener("click",(e=>{e.preventDefault(),n=e.target.id,d(s.LEVEL_SELECT_DOM,{level:n,element:e.target}),g.emit("level:select",{selectedLevel:n})}),!1)})),e("start").addEventListener("click",(o=>{if(o.preventDefault(),0===e("app").querySelectorAll(".level-image-container a.selected").length)return alert(t.notification.selectLevel),!1;d(s.GAME_START)}),!1)}function b(l){let r={...{id:"modal-"+o(),message:"No modal message is set.",buttons:!1,appendTo:"#app",visible:!1},...l};!0===r.buttons&&(r.buttons={cancel:{id:r.id+"-cancel",label:t.label.cancel},ok:{id:r.id+"-ok",label:t.label.ok}});let a=c(`\n        <div class="modal-overlay${r.visible?" show":""}" id="${r.id}">\n            <div class="modal-container">\n                ${r.title?`\n                <div class="modal-title">\n                    <h2>${r.title}</h2>\n                </div>\n                `:""}\n                ${r.body&&!r.message?r.body:`\n                <div class="modal-body">\n                    <p>${r.message}</p>\n                </div>\n                `}\n                ${r.buttons?`\n                <div class="modal-button-bar">\n                    ${r.buttons.cancel?`<a href="#" id="${r.buttons.cancel.id}" class="button button-cancel">${r.buttons.cancel.label}</a>`:""}\n                    ${r.buttons.ok?`<a href="#" id="${r.buttons.ok.id}" class="button button-confirm">${r.buttons.ok.label}</a>`:""}\n                </div>\n                `:""}\n            </div>\n        </div>\n    `);return r.buttons.cancel&&"function"==typeof r.buttons.cancel.callback&&a.querySelector("#"+r.buttons.cancel.id).addEventListener("click",r.buttons.cancel.callback,!1),r.buttons.ok&&"function"==typeof r.buttons.ok.callback&&a.querySelector("#"+r.buttons.ok.id).addEventListener("click",r.buttons.ok.callback,!1),e("app").append(a),a}class v{static TRANSITION_DELAY=200;constructor(){}static hide(o){const{id:l,timeout:r=400}=o;e(l)&&(e(l).classList.remove("show"),setTimeout((()=>{const o=e(l);o&&o.remove()}),r))}static removePrevious(){let e=document.querySelectorAll(".notification.show").length;if(e>0){let e=200;l(".notification.show",(o=>{v.hide({id:o.id,timeout:e}),e+=200}))}return e}static show(o){const l=v.removePrevious(),r=o=>{"string"==typeof o&&(o={title:o});let{message:l,title:r="No message specified.",timeout:c=4e3,autoHide:a=!1}=o;const t=v.createTemplate(l,r);document.body.append(t),setTimeout((()=>{e(t.id).classList.toggle("show")}),1),a&&setTimeout((()=>{v.hide({id:t.id})}),c)};l>0?setTimeout((()=>{r(o)}),200*l+200):r(o)}static createTemplate(e,l=!1){return c(`\n            <div class="notification" id="${"notification_"+o(5)}">\n                ${l?`\n                <h2>${l}</h2>\n                `:""}\n                ${e?`\n                <p>${e}</p>\n                `:""}\n            </div>\n        `)}}class y{static prefix="kok_";static removeItem(e){return localStorage.removeItem(y.prefix+e)}static setItem(e,o=""){return localStorage.setItem(y.prefix+e,JSON.stringify(o))}static getItem(e,o=!1){let l=localStorage.getItem(y.prefix+e);return null===l?o:JSON.parse(l)}}class p{#lobby=!1;state=!1;constructor(e){this.lobby=e,g.on("player:stats",(({player:e})=>{p.setLobbyCodeDom({code:e.lobbyCode})})),g.on("lobby:updated",(({lobby:e})=>{this.lobby=e,p.setLobbyCodeDom({code:this.lobby.code})})),g.once("lobby:joined",(({lobby:e})=>{this.lobby=e})),g.once("lobby:created",(({lobby:e})=>{this.lobby=e}))}static async joinOrCreate(e){if(e)g.emit("lobby:join",{lobbyCode:e});else{const e=prompt(t.notification.createLobby,o(4).toUpperCase());g.emit("lobby:create",{lobbyCode:e})}return new Promise(((e,o)=>{g.once("lobby:joined",(({lobby:o})=>{e(new p(o))})),g.once("lobby:created",(({lobby:o})=>{e(new p(o))})),setTimeout((()=>{o("Lobby creation timeout.")}),1e4)}))}static setLobbyCodeDom({code:o}){const l=e("lobbyCode");l&&(l.innerText=o)}static setState(e){g.emit("lobby:state",{key:"state",value:e})}leave(){g.emit("lobby:leave",{lobbyCode:this.code})}get players(){return this.lobby?.players||[]}get code(){return this.lobby?.code}static get cachedLobbyCode(){return y.getItem("lobby",!1)}get state(){return this.lobby?.state}set lobby(e){e.code!==this.#lobby.code&&y.setItem("lobby",e.code),this.#lobby=e}get lobby(){return this.#lobby}get playerNames(){return this.players.map((e=>e.username)).join(", ")}static template(e="",o=-1){const l={...E};return l.code=e,l.playerId=o,l}}const E={members:[],playerId:-1,code:"KOK123",data:{columnScores:{A:-1,B:-1,C:-1,D:-1,E:-1,F:-1,G:-1,H:-1,I:-1,J:-1,K:-1,L:-1,M:-1,N:-1,O:-1},colorScores:{high:{yellow:-1,green:-1,blue:-1,red:-1,orange:-1},low:{yellow:-1,green:-1,blue:-1,red:-1,orange:-1}}}},h=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"yellow"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"green"},{color:"red"},{color:"orange"},{color:"blue",star:!0},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow",star:!0},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"green"},{color:"orange"},{color:"red",star:!0},{color:"blue"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"green"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"orange"},{color:"green",star:!0},{color:"blue"},{color:"blue"},{color:"red"},{color:"red"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green",star:!0},{color:"orange"},{color:"red"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"red"},{color:"green"},{color:"orange"},{color:"yellow",star:!0},{color:"yellow"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"green"},{color:"orange"},{color:"orange"},{color:"yellow"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"red",star:!0},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"blue"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"red"},{color:"blue"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"red",star:!0},{color:"red"},{color:"blue"},{color:"orange"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"green"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]}],L=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"},{color:"green",star:!0}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"orange"},{color:"blue"},{color:"yellow"},{color:"yellow"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"yellow"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"red"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"red"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"green"},{color:"green",star:!0}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"green"},{color:"blue"},{color:"yellow"},{color:"orange",star:!0}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"green"},{color:"yellow",star:!0},{color:"blue"},{color:"orange"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"red",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green"},{color:"blue"},{color:"blue"},{color:"red",star:!0},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"orange",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"yellow"}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"blue"},{color:"blue"},{color:"blue",star:!0},{color:"red"},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"yellow",star:!0},{color:"blue"},{color:"red"},{color:"red"},{color:"orange"},{color:"orange"},{color:"green"}]}],S=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"yellow"},{color:"orange"},{color:"orange"},{color:"orange"},{color:"green"},{color:"blue",star:!0},{color:"red"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"yellow"},{color:"blue"},{color:"orange"},{color:"green",star:!0},{color:"green"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"green"},{color:"red"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"blue"},{color:"blue"},{color:"yellow"},{color:"red",star:!0},{color:"green"},{color:"green"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"red"},{color:"yellow",star:!0},{color:"yellow"},{color:"yellow"},{color:"green"},{color:"blue"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"green",star:!0},{color:"red"},{color:"red"},{color:"yellow"},{color:"orange"},{color:"orange"},{color:"blue"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"blue"},{color:"red",star:!0},{color:"orange"},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"blue"},{color:"red"},{color:"orange"},{color:"orange"},{color:"yellow",star:!0},{color:"green"},{color:"green"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow"},{color:"blue",star:!0},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"yellow"},{color:"yellow",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"red"},{color:"green"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"blue"},{color:"blue"},{color:"orange",star:!0},{color:"orange"},{color:"yellow"},{color:"green"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"green",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"red",star:!0},{color:"blue"},{color:"blue"},{color:"orange"},{color:"yellow"},{color:"yellow"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"orange"},{color:"blue",star:!0},{color:"red"},{color:"red"},{color:"red"},{color:"yellow"}]}],w=[{column:"A",score:[{value:5},{value:3}],grid:[{color:"orange",star:!0},{color:"blue"},{color:"yellow"},{color:"yellow"},{color:"red"},{color:"green"},{color:"green"}]},{column:"B",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"blue"},{color:"yellow",star:!0},{color:"yellow"},{color:"green"},{color:"red"}]},{column:"C",score:[{value:3},{value:2}],grid:[{color:"yellow",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"green"},{color:"green"},{color:"red"}]},{column:"D",score:[{value:3},{value:2}],grid:[{color:"orange"},{color:"orange"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"red"},{color:"red"}]},{column:"E",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"green",star:!0},{color:"green"},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"orange"}]},{column:"F",score:[{value:2},{value:1}],grid:[{color:"red"},{color:"red"},{color:"red"},{color:"yellow"},{color:"green",star:!0},{color:"blue"},{color:"orange"}]},{column:"G",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"green"},{color:"green"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"orange"}]},{column:"H",score:[{value:1},{value:0}],grid:[{color:"green"},{color:"green"},{color:"yellow"},{color:"blue",star:!0},{color:"orange"},{color:"orange"},{color:"red"}]},{column:"I",score:[{value:2},{value:1}],grid:[{color:"orange"},{color:"yellow",star:!0},{color:"yellow"},{color:"blue"},{color:"blue"},{color:"green"},{color:"red"}]},{column:"J",score:[{value:2},{value:1}],grid:[{color:"red",star:!0},{color:"red"},{color:"yellow"},{color:"yellow"},{color:"blue"},{color:"green"},{color:"orange"}]},{column:"K",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"red"},{color:"red"},{color:"yellow"},{color:"blue"},{color:"orange",star:!0},{color:"orange"}]},{column:"L",score:[{value:2},{value:1}],grid:[{color:"green"},{color:"green",star:!0},{color:"red"},{color:"red"},{color:"blue"},{color:"yellow"},{color:"orange"}]},{column:"M",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"blue"},{color:"blue"},{color:"orange"},{color:"orange"},{color:"yellow"},{color:"red",star:!0}]},{column:"N",score:[{value:3},{value:2}],grid:[{color:"green"},{color:"yellow"},{color:"yellow"},{color:"orange"},{color:"blue"},{color:"blue",star:!0},{color:"red"}]},{column:"O",score:[{value:5},{value:3}],grid:[{color:"green"},{color:"yellow"},{color:"orange",star:!0},{color:"orange"},{color:"blue"},{color:"blue"},{color:"red"}]}];class T{selectedLevel=!1;static levelMap={level1:h,level2:L,level3:S,level4:w};constructor(){u(s.LEVEL_SELECT_DOM,(e=>{const{level:o,element:l}=e.detail;T.selectInDom(o,l)})),u(s.GAME_START,(()=>{d(s.MODAL_HIDE,{modalId:"selectLevelModal"})})),g.on("level:selected",(({selectedLevel:e})=>{this.level=e,d(s.GAME_CREATE_STATE)}))}static selectInDom(o,r=!1){if(l(".level-image-container a",(e=>{e.classList.remove("selected")})),""!==o){if(r||(r=e(o)),!r)return;r.parentElement.classList.add("selected")}}reset(){y.removeItem("level"),this.selectedLevel=!1}select({Player:o,Lobby:l}){const r="selectLevelModal";e(r)||m({modalId:r,Player:o,Lobby:l,Level:this}),d(s.MODAL_SHOW,{modalId:r})}set level(e){this.selectedLevel=e,d(s.LEVEL_SELECT_DOM,{level:e})}get level(){return T.levelMap[this.selectedLevel]}}class O{static JOKER_VALUE=1;static STAR_VALUE=-2;constructor(){u(s.JOKER_SELECTED,(e=>{dispatch(s.RENDER_SCORES,{scores:{jokers:this.jokerScore}})})),u(s.STAR_SELECTED,(()=>{dispatch(s.RENDER_SCORES,{scores:{stars:this.starScore}})})),u(s.SCORE_RELOAD,(()=>{dispatch(s.RENDER_SCORES,{scores:{bonus:this.bonusScore,columns:this.columnScore,jokers:this.jokerScore,stars:this.starScore,total:this.total}})})),u(s.SCORE_TOTAL_TOGGLE,(()=>{this.toggleTotalScore()}))}get total(){return this.bonusScore+this.columnScore+this.jokerScore+this.starScore}get columnScore(){let e=document.querySelectorAll("span.column-score.active"),o=0;return Array.prototype.forEach.call(e,(e=>{let l=parseInt(e.innerText);o+=l})),o}get jokerScore(){let e=document.getElementsByClassName("joker"),o=e.length,l=0;return Array.prototype.forEach.call(e,(e=>{e.classList.contains("used")&&l++})),(o-l)*O.JOKER_VALUE}get bonusScore(){let e=document.querySelectorAll(".final-selected span"),o=0;return Array.prototype.forEach.call(e,(e=>{o+=parseInt(e.innerText)})),o}get starScore(){const e=document.querySelectorAll("span.selected span.star").length;return(document.querySelectorAll("span.star").length-e)*O.STAR_VALUE}toggleTotalScore(){let o=e("totalScore");o.classList.contains("hide")?(o.innerText=this.total,o.classList.remove("hide")):(o.innerText="",o.classList.add("hide"))}}class k{constructor(){}static get cachedId(){return y.getItem("sessionId")}static set cachedId(e){return y.setItem("sessionId",e)}}class R{#cachedPlayer=!1;constructor(){const e=k.cachedId;!1!==e?(g.auth={sessionId:e,username:R.cachedName},g.connect()):this.createPlayer(),g.once("player:created",(({player:e})=>{this.player=e})),g.on("player:updated",(({player:e})=>{this.player=e})),g.on("player:stats",(({totalPlayers:e,players:o})=>{R.setPlayerNamesDom({players:o}),R.setPlayerTotalDom({totalPlayers:e})})),g.on("player:connected",(e=>{v.show({title:t.notification.playerJoined.title,message:t.notification.playerJoined.message(e.username),autoHide:!0})}))}static setPlayerTotalDom({totalPlayers:o}){const l=e("playerTotal");l&&(l.innerText=o)}static setPlayerNamesDom({players:o}){const l=e("playerNames");l&&(l.innerText=o.join(", "))}static setPlayerNameDom({player:o}){const l=e("playerName");l&&(l.innerText=o.username)}createPlayer(){const e=prompt(t.notification.playerName);this.player={username:e},this.connectPlayer(this.player)}connectPlayer(e){console.log("Connecting player!",e),g.auth=e,g.connect()}delete(){return y.removeItem("player")}set player(e){if(!e.username)throw new Error("Invalid player object. No username.");this.#cachedPlayer=e,y.setItem("player",e.username),R.setPlayerNameDom(e.username)}get player(){return this.#cachedPlayer}static get cachedName(){return y.getItem("player")}get name(){return this.#cachedPlayer.username}get id(){return this.#cachedPlayer?.id||o(6).toLowerCase()}}class C{static COLORS=["green","yellow","blue","red","orange"];static TOTAL_JOKERS=8;static STATE={LEVEL_SELECT:"levelSelect",IN_GAME:"inGame"};Lobby;Level;Score;Player;#cachedState=!1;constructor(){this.state=y.getItem("state"),this.Player=new R,g.on("game:start",(()=>{this.start()})),g.on("lobby:updated",(({lobby:e})=>{e.state})),g.on("connect",(()=>{console.clear(),this.initialize()})),u(s.GAME_CREATE_STATE,(()=>{this.state=this.createState()})),u(s.GAME_NEW,(()=>{this.new()})),u(s.GAME_START,(()=>{this.continue()}))}initialize(){p.joinOrCreate(p.cachedLobbyCode).then((e=>{this.Lobby=e,this.Level=new T({Lobby:e,Game:this}),this.Score=new O,this.start()})).catch((e=>{console.error("Failed to create lobby",e)}))}start(){this.state?this.continue():this.Level.select({Player:this.Player,Lobby:this.Lobby})}new(){this.resetState(),this.start()}continue(){this.state=y.getItem("state"),d(s.RENDER_LEVEL)}resetState(){this.Level.reset(),this.state=!1}createState(){let e,o={grid:this.Level.level,jokers:[],colorScores:{high:[],low:[]}};for(e=0;e<C.TOTAL_JOKERS;e++)o.jokers.push({selected:!1});return C.COLORS.forEach((e=>{o.colorScores.high.push({color:e,value:0}),o.colorScores.low.push({color:e,value:0})})),o}get state(){return this.#cachedState||(this.#cachedState=y.getItem("state",!1)),this.#cachedState}set state(e){this.#cachedState=e,e?y.setItem("state",e):(console.log("Clearing local state"),y.removeItem("state"))}updateState(e,o,l,r,c="grid"){let a=this.state,t=!1;a.grid.forEach(((s,n)=>{s.column===e&&(a.grid[n][c][o][l]=r,t=!0)})),t&&(this.state=a,d(s.RENDER_LEVEL))}updateBlockState(e,o,l,r){let c=this.state,a=!1;c.grid.forEach(((t,s)=>{t.column===e&&(c.grid[s].grid[o][l]=r,a=!0)})),a&&(this.state=c,d(s.RENDER_LEVEL))}updateJokerState(e,o){let l=this.state,r=!1;l.jokers.forEach(((l,c)=>{c===e&&(l.selected=o,r=!0)})),r&&(this.state=l,d(s.RENDER_LEVEL))}updateColorScoreState(e,o,l){let r=!1,c=this.state;c.colorScores[e].forEach((e=>{e.color===o&&(e.value=l,r=!0)})),r&&(this.state=c,d(s.RENDER_LEVEL))}}class _{currentGame=!1;version;constructor(){u(s.MODAL_TOGGLE,(o=>{const{modalId:l}=o.detail;e(l)&&e(l).classList.toggle("show")})),u(s.MODAL_HIDE,(o=>{const{modalId:l}=o.detail;e(l)&&e(l).classList.contains("show")&&e(l).classList.remove("show")})),u(s.MODAL_SHOW,(o=>{const{modalId:l}=o.detail;e(l)&&!e(l).classList.contains("show")&&e(l).classList.add("show")})),this.currentGame=new C,this.parseOrientationOverlay(),this.parseGenericLoading(),u(s.LOADING,(()=>{d(s.MODAL_SHOW,{modalId:"genericLoading"})})),u(s.RENDER_LEVEL,(()=>{this.render()})),u(s.RENDER_JOKER_SCORE,(e=>{this.renderJokerScore(e.detail.value)})),u(s.RENDER_SCORES,(e=>{const{scores:o}=e.detail;void 0!==o.bonus&&this.renderBonusScore(o.bonus),void 0!==o.columns&&this.renderColumnScore(o.columns),void 0!==o.jokers&&this.renderJokerScore(o.jokers),void 0!==o.stars&&this.renderStarScore(o.stars)})),g.on("version",(e=>{y.setItem("version",e)})),g.on("session",(({sessionId:e})=>{k.cachedId=e})),g.on("disconnect",(()=>{}))}renderBonusScore(o){e("bonusTotal").innerText=o}renderColumnScore(o){e("columnsTotal").innerText=o}renderJokerScore(o){e("jokerTotal").innerText=o}renderStarScore(o){e("starsTotal").innerText=o}parseOrientationOverlay(){b({id:"orientationModal",message:t.notification.landscapeMode})}parseGenericLoading(){b({visible:!1,id:"genericLoading",message:"Aan het laden.. een moment geduld."})}parseColumnGrid(o){e("blockGrid").innerHTML="",o.grid.forEach((o=>{e("blockGrid").append(this.parseColumn(o))}));let l=document.querySelectorAll(".score-block:not(.final-score)");Array.prototype.forEach.call(l,(e=>{e.addEventListener("click",(()=>{let o=!e.classList.contains("selected");this.currentGame.updateBlockState(e.data.column,e.data.row,"selected",o),d(s.GRID_BLOCK_SELECTED,{selected:o,block:e}),e.querySelectorAll(".star").length>0&&d(s.STAR_SELECTED,{selected:o,block:e})}),!1)}))}parseJokerColumn(o){let l=e("jokerContainer");l.innerHTML="",o.jokers.forEach((e=>{let o=r("span",{className:"joker",innerText:"!"});e.selected&&o.classList.add("used"),l.append(o)}));let c=document.getElementsByClassName("joker");Array.prototype.forEach.call(c,((e,o)=>{e.addEventListener("click",(()=>{let l=!e.classList.contains("used");this.currentGame.updateJokerState(o,l),d(s.JOKER_SELECTED,{joker:e,selected:l})}),!1)}))}parseScoreColumns(o){e("scoreColumn1").innerHTML="",o.colorScores.high.forEach((o=>{let l=r("span",{className:"score-block final-score "+o.color});-1===o.value&&l.classList.add("selected"),5===o.value&&l.classList.add("final-selected"),r("span",{innerText:5},l),e("scoreColumn1").append(l)})),e("scoreColumn2").innerHTML="",o.colorScores.low.forEach((o=>{let l=r("span",{className:"score-block final-score "+o.color});-1===o.value&&l.classList.add("selected"),3===o.value&&l.classList.add("final-selected"),r("span",{innerText:3},l),e("scoreColumn2").append(l)}));let l=function(e,o=5,l=-1){return e.classList.contains("final-selected")||e.classList.contains("selected")?e.classList.contains("final-selected")&&!e.classList.contains("selected")?l:0:o},c=function(e){let o="";return C.COLORS.forEach((l=>{e.classList.contains(l)&&(o=l)})),o},a=document.querySelectorAll("#scoreColumn1 .final-score");Array.prototype.forEach.call(a,(e=>{e.addEventListener("click",(()=>{this.currentGame.updateColorScoreState("high",c(e),l(e,5,-1)),d(s.SCORE_RELOAD)}),!1)}));let t=document.querySelectorAll("#scoreColumn2 .final-score");Array.prototype.forEach.call(t,(e=>{e.addEventListener("click",(()=>{this.currentGame.updateColorScoreState("low",c(e),l(e,3,-1)),d(s.SCORE_RELOAD)}),!1)}));let n=document.querySelectorAll("span.column-score");Array.prototype.forEach.call(n,(e=>{e.addEventListener("click",(()=>{let o,l=e.data.column,r=e.data.row;o=e.classList.contains("active")||e.classList.contains("taken")?e.classList.contains("active")&&!e.classList.contains("taken")?"taken":"default":"active",this.currentGame.updateState(l,r,"state",o,"score"),d(s.SCORE_RELOAD)}),!1)}))}parseGrid(){this.parseColumnGrid(this.currentGame.state),this.parseJokerColumn(this.currentGame.state),this.parseScoreColumns(this.currentGame.state),d(s.GRID_RENDER_COMPLETE)}parseTotalScores(){if(e("totalScores"))return;const o=`\n            <div id="totalScores">\n                <div class="totals" id="bonus"><label>${t.label.bonus}</label><span class="label">=</span><span id="bonusTotal" class="totalValue">15</span></div>\n                <div class="totals" id="columns"><label>${t.label.columns}</label><span class="label">+</span><span id="columnsTotal" class="totalValue"></span></div>\n                <div class="totals" id="jokers"><label>${t.label.jokers}</label><span class="label">+</span><span id="jokerTotal" class="totalValue"></span></div>\n                <div class="totals" id="stars"><label>${t.label.stars}</label><span class="label">-</span><span id="starsTotal" class="totalValue"></span></div>\n                <div class="totals" id="totals">\n                    <label>${t.label.totals}</label><span class="label">&nbsp;</span><span id="totalScore" class="totalValue hide"></span>\n                </div>\n            </div>\n        `;e("scoreColumn").append(c(o)),e("totals").addEventListener("click",(()=>{d(s.SCORE_SHOW)}),!1)}renderNewGameButton(o){const l="newGame";if(e(l))return;const r=function(e={}){const o={callback:()=>!1,className:"button",...e};let l=c(`<a>${o.label}</a>`);return o.callback&&"function"==typeof o.callback&&l.addEventListener("click",o.callback,!1),o.className&&(l.className=o.className),o.id&&(l.id=o.id),l}({callback:o,id:l,label:t.label.newGame,className:"new-game"});return e("grid").append(r),r}render(e){this.parseGrid(e),this.parseTotalScores();const o="newGameModal";!function({modalId:e="newGameModal"}){b({id:e,message:t.modal.newGame.body,buttons:{cancel:{id:e+"Cancel",label:t.label.cancel,callback(o){o.preventDefault(),d(s.MODAL_TOGGLE,{modalId:e})}},ok:{id:e+"Confirm",label:t.label.ok,callback(o){o.preventDefault(),d(s.MODAL_TOGGLE,{modalId:e}),d(s.GAME_NEW)}}}})}({modalId:o}),this.renderNewGameButton((e=>{e.preventDefault(),d(s.MODAL_SHOW,{modalId:o})})),d(s.SCORE_RELOAD)}parseColumn(e){let o=r("div",{className:"column"+("H"===e.column?" highlight":"")});r("span",{className:"letter rounded-block",innerText:e.column},o),e.grid.forEach(((l,c)=>{const a=r("span",{className:"score-block "+l.color,data:{column:e.column,row:c}});l.star&&r("span",{className:"star",innerText:"*"},a),l.selected&&a.classList.add("selected"),o.append(a)}));let l=r("div",{className:"column-score"});e.score.forEach(((o,c)=>{r("span",{className:"rounded-block column-score"+(o.state&&"default"!==o.state?" "+o.state:""),innerText:o.value,data:{column:e.column,row:c}},l)})),o.append(l);let c=o.querySelectorAll(".score-block"),a=o.querySelectorAll(".selected"),t=o.querySelector(".letter").innerText.toUpperCase();return c.length===a.length&&g.emit("grid:column-complete",{columnLetter:t}),o}}try{new _}catch(e){console.error("Failed to load game. Reset state!",e)}window.socket=g;
